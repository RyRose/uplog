-- Inserts a single record of progress.
-- name: InsertProgress :one
INSERT INTO progress (lift, date, weight, sets, reps, side_weight)
VALUES (?, ?, ?, ?, ?, ?)
RETURNING *;

-- Lists all progress for a given date.
-- name: ListProgressForDay :many
SELECT * FROM progress
WHERE date = ?;

-- Deletes the progress matching the ID.
-- name: DeleteProgress :exec
DELETE FROM progress
WHERE id = ?;

-- Gets the latest progress for the lift.
-- name: GetLatestProgressForLift :one
SELECT sqlc.embed(progress), sqlc.embed(side_weight)
FROM progress
JOIN side_weight
    ON (COALESCE(progress.side_weight, 'x1') = side_weight.id)
WHERE progress.lift = ?
ORDER BY progress.id DESC
LIMIT 1;

-- Gets the lift matching the ID.
-- name: GetLift :one
SELECT * FROM lift
WHERE id = ?
LIMIT 1;

-- name: ListAllIndividualLifts :many
SELECT id
FROM lift;

-- name: ListAllIndividualSideWeights :many
SELECT id
FROM side_weight;

-- name: ListAllIndividualMuscles :many
SELECT id
FROM muscle;

-- name: ListAllIndividualMovements :many
SELECT id
FROM movement;

-- name: ListAllIndividualRoutines :many
SELECT id
FROM routine;

-- name: ListAllIndividualLiftGroups :many
SELECT id
FROM lift_group;

-- name: ListAllIndividualWorkouts :many
SELECT id FROM workout;

-- name: ListMostRecentProgressForLift :many
SELECT *
FROM progress
WHERE lift = ?
ORDER BY id DESC
LIMIT ?;

-- name: QueryLiftGroupsForDate :many
SELECT
    lift.lift_group,
    SUM(progress.reps * progress.sets) AS total_reps
FROM
    progress
INNER JOIN
    lift ON (progress.lift = lift.id)
WHERE progress."date" = ?
GROUP BY lift.lift_group;

-----------------------
-- sqlfluff settings --
-----------------------

-- Treat as sqlite.
-- sqlfluff:dialect:sqlite

-- Disable unknown column count rule. The structs generated by `*`
-- are better and are handled gracefully by sqlc.
-- sqlfluff:exclude_rules:L044
